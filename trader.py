def place_order(self, side, amount, stop_loss_percent=1.5, take_profit_percent=3.0):
    try:
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä—ã–Ω–æ—á–Ω–æ–≥–æ –æ—Ä–¥–µ—Ä–∞: {side} {amount}")
        market_order = self.exchange.create_order(
            symbol=self.symbol,
            type='market',
            side=side,
            amount=amount
        )
        order_id = market_order.get('id', 'N/A')
        print(f"‚úÖ –†—ã–Ω–æ—á–Ω—ã–π –æ—Ä–¥–µ—Ä –∏—Å–ø–æ–ª–Ω–µ–Ω: {order_id}")

        # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –≤—Ö–æ–¥–∞ –∏–∑ –æ—Ä–¥–µ—Ä–∞ (–∏–ª–∏ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ü–µ–Ω—ã)
        # BingX –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–Ω—É –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –≤ 'price'
        entry_price = market_order.get('price', None)
        if not entry_price:
            # –ï—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ –≤–µ—Ä–Ω—É–ª–∞—Å—å ‚Äî –±–µ—Ä–µ–º —Ç–µ–∫—É—â—É—é
            ticker = self.exchange.fetch_ticker(self.symbol)
            entry_price = ticker['last']

        # ‚úÖ –†–ê–°–ß–Å–¢ TP/SL –í –ü–†–û–¶–ï–ù–¢–ê–• –û–¢ –¶–ï–ù–´ –í–•–û–î–ê
        if side == 'buy':
            stop_loss_price = entry_price * (1 - stop_loss_percent / 100)
            take_profit_price = entry_price * (1 + take_profit_percent / 100)
        else:  # sell
            stop_loss_price = entry_price * (1 + stop_loss_percent / 100)
            take_profit_price = entry_price * (1 - take_profit_percent / 100)

        print(f"üìä –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {entry_price:.2f}")
        print(f"‚õî –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ (stop_market): {stop_loss_price:.2f} ({stop_loss_percent}%)")
        print(f"üéØ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞ (limit): {take_profit_price:.2f} ({take_profit_percent}%)")

        # ‚úÖ –°—Ç–æ–ø-–ª–æ—Å—Å ‚Äî –∫–∞–∫ stop_market, reduceOnly=True
        self.exchange.create_order(
            symbol=self.symbol,
            type='stop_market',
            side='sell' if side == 'buy' else 'buy',
            amount=amount,  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å—é –ø–æ–∑–∏—Ü–∏—é
            params={
                'stopPrice': stop_loss_price,
                'reduceOnly': True  # üî• –ö–õ–Æ–ß–ï–í–û–ï!
            }
        )

        # ‚úÖ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç ‚Äî –∫–∞–∫ limit, reduceOnly=True
        self.exchange.create_order(
            symbol=self.symbol,
            type='limit',
            side='sell' if side == 'buy' else 'buy',
            amount=amount,  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å—é –ø–æ–∑–∏—Ü–∏—é
            price=take_profit_price,
            params={'reduceOnly': True}  # üî• –ö–õ–Æ–ß–ï–í–û–ï!
        )

        print("‚úÖ –£–°–ü–ï–•! –í—Å–µ –æ—Ä–¥–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã (TP/SL –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ —Ü–µ–Ω–µ –≤—Ö–æ–¥–∞)")
        return market_order

    except Exception as e:
        error_str = str(e)
        if "position not exist" in error_str:
            print("‚ùå –û–®–ò–ë–ö–ê: –ü–æ–∑–∏—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –æ—Ä–¥–µ—Ä –Ω–µ –∏—Å–ø–æ–ª–Ω–∏–ª—Å—è –∏–ª–∏ –±—ã–ª –æ—Ç–º–µ–Ω—ë–Ω.")
        elif "Invalid order quantity" in error_str:
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ—Ä–¥–µ—Ä–∞. –£–±–µ–¥–∏—Å—å, —á—Ç–æ amount > 0.")
        elif "Invalid order type" in error_str:
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –æ—Ä–¥–µ—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–π 'stop_market' –∏ 'limit'.")
        elif "reduceOnly" in error_str:
            print("‚ùå –û–®–ò–ë–ö–ê: reduceOnly —Ç—Ä–µ–±—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ ‚Äî –ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –æ—Ä–¥–µ—Ä –∏—Å–ø–æ–ª–Ω–µ–Ω.")
        else:
            print(f"‚ùå –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞ API: {type(e).__name__}: {error_str}")
        return None

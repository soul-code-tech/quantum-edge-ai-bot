# create_and_push_weights.py
import os
import pickle
import subprocess
import sys
from data_fetcher import get_bars
from strategy import calculate_strategy_signals
from lstm_model import LSTMPredictor

SYMBOLS = [
    'BTC-USDT', 'ETH-USDT', 'SOL-USDT', 'BNB-USDT',
    'XRP-USDT', 'DOGE-USDT', 'TON-USDT', 'AVAX-USDT',
    'SHIB-USDT', 'LINK-USDT', 'PENGU-USDT'
]

WEIGHTS_DIR = "weights"          # –ø–∞–ø–∫–∞ –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞

def train_and_save(symbol: str, lookback: int = 60, epochs: int = 5) -> bool:
    """–û–±—É—á–∞–µ—Ç –æ–¥–Ω—É –ø–∞—Ä—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–µ—Å–∞ –≤ WEIGHTS_DIR –≤ –ø—Ä–æ–µ–∫—Ç–µ."""
    try:
        print(f"\nüß† –û–±—É—á–∞–µ–º {symbol} (epochs={epochs})...")
        df = get_bars(symbol, "1h", 300)
        if df is None or len(df) < 200:
            print(f"‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {symbol}")
            return False
        df = calculate_strategy_signals(df, 60)

        model = LSTMPredictor(lookback=lookback)
        model.train(df, epochs=epochs)

        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–µ—Å–∞ –≤ –ü–ê–ü–ö–£ –ü–†–û–ï–ö–¢–ê, –∞ –Ω–µ –≤ /tmp
        os.makedirs(WEIGHTS_DIR, exist_ok=True)
        dst = os.path.join(WEIGHTS_DIR, symbol.replace("-", "") + ".pkl")
        with open(dst, "wb") as fh:
            pickle.dump({"scaler": model.scaler, "model": model.model}, fh)
        print(f"‚úÖ –í–µ—Å–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {dst}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏ {symbol}: {e}")
        return False

def push_to_github():
    """–°–æ–∑–¥–∞—ë—Ç –≤–µ—Ç–∫—É weights –∏ –ø—É—à–∏—Ç –ø–∞–ø–∫—É weights/."""
    try:
        # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ (–≥–¥–µ –ª–µ–∂–∏—Ç .git)
        repo_root = os.path.dirname(os.path.abspath(__file__))
        os.chdir(repo_root)

        # —Å–æ–∑–¥–∞—ë–º –≤–µ—Ç–∫—É weights (–µ—Å–ª–∏ –µ—ë –Ω–µ—Ç)
        subprocess.run(["git", "checkout", "-B", "weights"], check=True)
        # –¥–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É
        subprocess.run(["git", "add", "weights/"], check=True)
        # –∫–æ–º–º–∏—Ç
        subprocess.run(["git", "commit", "-m", "–≤–µ—Å–∞ –º–æ–¥–µ–ª–µ–π –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞"], check=True)
        # –ø—É—à
        subprocess.run(["git", "push", "origin", "weights"], check=True)
        print("‚úÖ –ü–∞–ø–∫–∞ weights –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –≤–µ—Ç–∫—É origin/weights")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Git: {e}")
        sys.exit(1)

def main():
    print("=== –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—É—à –≤–µ—Å–æ–≤ –≤ GitHub ===")
    ok = 0
    for s in SYMBOLS:
        if train_and_save(s, epochs=5):
            ok += 1
    print(f"\n‚úÖ –û–±—É—á–µ–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {ok}/{len(SYMBOLS)} –ø–∞—Ä")
    push_to_github()
    print("\nüéâ –í–µ—Å–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –≤–µ—Ç–∫–µ `weights` –Ω–∞ GitHub!")

if __name__ == "__main__":
    main()

# main.py
import time
import pandas as pd
from data_fetcher import get_bars
from strategy import calculate_strategy_signals
from ml_filter import get_prophet_trend
from trader import BingXTrader
from telegram_notifier import send_telegram_message  # —Å–æ–∑–¥–∞–¥–∏–º –Ω–∏–∂–µ
import os
from dotenv import load_dotenv

load_dotenv()

def main():
    symbol = 'BTC/USDT'
    trader = BingXTrader(symbol=symbol, use_demo=True)  # True = –¥–µ–º–æ (VST), False = —Ä–µ–∞–ª
    risk_percent = 1.0  # —Ä–∏—Å–∫ 1% –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞
    last_signal_time = 0
    signal_cooldown = 3600  # 1 —á–∞—Å –º–µ–∂–¥—É —Å–∏–≥–Ω–∞–ª–∞–º–∏

    while True:
        try:
            print("üîÑ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
            df = get_bars(symbol, '1h', 100)
            df = calculate_strategy_signals(df, 60)

            if df['buy_signal'].iloc[-1] or df['sell_signal'].iloc[-1]:
                current_time = time.time()
                if current_time - last_signal_time < signal_cooldown:
                    print("‚è≥ –ö—É–ª–¥–∞—É–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏–≥–Ω–∞–ª")
                    time.sleep(60)
                    continue

                # –§–∏–ª—å—Ç—Ä Prophet
                trend_up, pred_price = get_prophet_trend(df)
                current_price = df['close'].iloc[-1]

                side = None
                if df['buy_signal'].iloc[-1] and trend_up:
                    side = 'buy'
                elif df['sell_signal'].iloc[-1] and not trend_up:
                    side = 'sell'

                if side:
                    # –†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç: —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ = —Ä–∏—Å–∫ / (ATR * 1.5)
                    atr = df['atr'].iloc[-1]
                    stop_dist = atr * 1.5
                    equity = 10.0  # $10 —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç
                    risk_amount = equity * (risk_percent / 100)
                    amount = risk_amount / stop_dist

                    stop_loss = current_price - stop_dist if side == 'buy' else current_price + stop_dist
                    take_profit = current_price + atr * 3 if side == 'buy' else current_price - atr * 3

                    print(f"üéØ {side.upper()} —Å–∏–≥–Ω–∞–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω Prophet!")
                    print(f"üìà –¶–µ–Ω–∞: {current_price:.2f}, –ü—Ä–æ–≥–Ω–æ–∑: {pred_price:.2f}")
                    print(f"üìä –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: {amount:.3f}, SL: {stop_loss:.2f}, TP: {take_profit:.2f}")

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
                    msg = f"üöÄ {side.upper()} {symbol}\n–¶–µ–Ω–∞: {current_price:.2f}\n–ü—Ä–æ–≥–Ω–æ–∑: {pred_price:.2f}\n–ü–æ–∑–∏—Ü–∏—è: {amount:.3f}"
                    send_telegram_message(msg)

                    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Ä–¥–µ—Ä (–≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ)
                    trader.place_order(side, amount, stop_loss, take_profit)

                    last_signal_time = current_time

            time.sleep(60)  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
            time.sleep(60)

if __name__ == "__main__":
    main()

#!/usr/bin/env python3
"""
–û–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –í–°–ï–• —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä (5 —ç–ø–æ—Ö).
–ó–∞–ø—É—Å–∫: python train_once.py
–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–µ—Å–∞ –ª–µ–∂–∞—Ç –≤ weights/ –∏ –±–æ–ª—å—à–µ –Ω–∏–∫–∞–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
"""
import os
import time
from data_fetcher import get_bars
from strategy import calculate_strategy_signals
from lstm_model import LSTMPredictor

SYMBOLS = [
    'BTC-USDT', 'ETH-USDT', 'SOL-USDT', 'BNB-USDT',
    'XRP-USDT', 'DOGE-USDT', 'TON-USDT', 'AVAX-USDT',
    'SHIB-USDT', 'LINK-USDT', 'PENGU-USDT'
]
TIMEFRAME = '1h'
BARS_FOR_TRAIN = 500        # —Å–≤–µ—á–µ–π –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
EPOCHS = 5                  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ø–æ—Ö
WEIGHTS_DIR = 'weights'

def main():
    os.makedirs(WEIGHTS_DIR, exist_ok=True)
    print('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ 5 —ç–ø–æ—Ö –Ω–∞ –≤—Å–µ—Ö –ø–∞—Ä–∞—Ö...')
    for sym in SYMBOLS:
        print(f'\nüéì {sym}: –æ–±—É—á–µ–Ω–∏–µ ({EPOCHS} —ç–ø–æ—Ö)...')
        df = get_bars(sym, TIMEFRAME, BARS_FOR_TRAIN)
        if df is None or len(df) < 300:
            print(f'‚ùå {sym}: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö ‚Äì –ø—Ä–æ–ø—É—Å–∫–∞–µ–º')
            continue
        df = calculate_strategy_signals(df, 60)
        model = LSTMPredictor(lookback=60, model_dir=WEIGHTS_DIR)
        ok = model.train_model(df, sym, epochs=EPOCHS, is_initial=True)
        if ok:
            model.save(sym)
        else:
            print(f'‚ùå {sym}: –æ–±—É—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å')
    print('\n‚úÖ –û–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –í–µ—Å–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ weights/')

if __name__ == '__main__':
    main()
